<configuration>
    <!-- 기본 Spring Boot 색상, 패턴 포함 (선택 사항) -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!--    설정파일 지정 -->
    <springProperty name="FILE_NAME" source="logging.file.name"/>
    <springProperty name="FILE_PATTERN" source="logging.file.pattern"/>

    <!-- 콘솔용: 텍스트 출력 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %clr([%d{yyyy-MM-dd HH:mm:ss.SSS}]){faint} %clr([%thread]){magenta} %clr(%-5level){highlight} %clr(%logger{36}){cyan} - %msg%n
            </pattern>
        </encoder>
    </appender>
    <!-- 루트 로거 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
    </root>

    <springProfile name="!local">
        <!-- JSON 형식 로그 파일 저장 -->
        <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${FILE_NAME}</file>

            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATTERN}</fileNamePattern>
                <maxHistory>30</maxHistory>
                <maxFileSize>10MB</maxFileSize>
            </rollingPolicy>

            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <fieldName>timestamp</fieldName>
                    </timestamp>
                    <pattern>
                        <pattern>
                            {
                            "level": "%level",
                            "logger": "%logger",
                            "thread": "%thread",
                            "message": "%message"
                            }
                        </pattern>
                    </pattern>
                    <stackTrace>
                        <fieldName>stacktrace</fieldName>
                    </stackTrace>
                </providers>
            </encoder>
        </appender>

        <root level="INFO">
            <appender-ref ref="JSON_FILE"/>
        </root>
    </springProfile>

    <springProperty name="DISCORD_WEBHOOK_URL" source="logging.discord.webhook-url">
        <!-- DiscordAppender 설정 -->
        <appender name="DISCORD" class="com.github.napstr.logback.DiscordAppender">
            <webhookUri>${DISCORD_WEBHOOK_URL}</webhookUri>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>
                    %d{yyyy-MM-dd HH:mm:ss,Asia/Seoul} [%thread] [%-5level] %logger{36} - %msg%n```%ex{full}```
                </pattern>
            </layout>
            <tts>false</tts>
        </appender>

        <!-- 비동기 처리를 위한 AsyncAppender 설정 -->
        <appender name="ASYNC_DISCORD" class="ch.qos.logback.classic.AsyncAppender">
            <!-- 이름이 DISCORD인 Appender에 대해서 비동기 처리 -->
            <appender-ref ref="DISCORD"/>
            <!-- 처리되는 로그 중, ERROR 이상의 수준만 필터링하여 실행함 -->
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>ERROR</level>
            </filter>
        </appender>
    </springProperty>

</configuration>

